<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://www.tei-c.org/release/xml/tei/custom/schema/relaxng/tei_all.rng" type="application/xml"
  schematypens="http://relaxng.org/ns/structure/1.0"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:s="http://purl.oclc.org/dsdl/schematron" xmlns:rng="http://relaxng.org/ns/structure/1.0" xmlns:xi="http://www.w3.org/2001/XInclude" xml:lang="en" xmlns:sch="http://purl.oclc.org/dsdl/schematron" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:foaf="http://xmlns.com/foaf/0.1/">
  <teiHeader>
    <fileDesc>
      <titleStmt>
        <title>DesenrollandoElCordel_ODD</title>
        <author xml:id="PJ">
          <persName>Pauline Jacsont</persName>
        </author>
        <author xml:id="EL">
          <persName>Elina Leblanc</persName>
        </author>
      </titleStmt>
      <editionStmt>
        <edition n="0.2">Version 0.2</edition>
      </editionStmt>
      <publicationStmt>
        <authority>Projet Desenrollando el cordel / Démêler le cordel / Untangling the
          cordel</authority>
        <date when="2021"/>
        <ptr target="https://github.com/DesenrollandoElCordel"/>
        <availability>
          <p>CC-BY-NC-SA</p>
        </availability>
      </publicationStmt>
      <sourceDesc>
        <p/>
      </sourceDesc>
    </fileDesc><encodingDesc><appInfo><application ident="RomaJS" version="1.0.0" when="2023-07-26T12:11:25.119Z"><desc>File edited with <ref target="https://github.com/TEIC/romajs">RomaJS</ref></desc></application></appInfo></encodingDesc>
    <revisionDesc>
      <listChange>
        <listChange>
          <change when="2021-12-08">Document creation</change>
          <change when="2021-12-15">Adding item to fw, head, div, material elements ; Removal item "OCR4all" to application element; Removal item "titulo_verso" and "titulo_octava" to application head element</change>
          <change when="2021-12-28">Adding appInfo and licence to head</change>
        </listChange>
      </listChange>
      </revisionDesc>
  </teiHeader>
  <text>
    <body>
      <div xml:id="Presentation">
        <p>The project <ref target="#Cordel"><hi rend="italic">Desenrollando el cordel / Untangling
              the cordel / Untangling the cordel</hi></ref> is a research project that aims to
          study, describe, digitise and put online within a digital library the collection of pliego
          de cordel belonging to the University Library of Geneva. To do this, the entire corpus
          available at the University Library of Geneva (915 Spanish chapbooks ) was scanned and
          encoded in conformity with the XML-TEI standards. </p>
        <p>A part of the corpus, Moreno-TEI-files, has been ocerised thanks to the Transkribus tool
          and then encoded following a first schema that corresponds to the specificity of this
          corpus. The rest of the corpus (Varios-TEI-files) was digitized from the infastructure
          developed at the University of Geneva, <ref target="https://www.unige.ch/lettres/humanites-numeriques/fr/recherche/projets-de-la-chaire/fondue/"> FoNDUE</ref> : this infastructure uses the <ref target="#Cordel"><hi rend="italic">#eScriptorium2019</hi></ref> interface and The HTR engine <ref target="#Kraken2019"><hi rend="italic">Kraken</hi></ref>. This new schema was
          thus created to fit the specificities of the Varios corpus and follows the new standards.
            This schema describes our encoding choices for publishing on TEI-Publisher: it has been
          developed according to the <ref target="#segmonto2021"><hi rend="italic">SegmOnto</hi></ref> standards.</p>
      </div>
      <div xml:id="Bibliography">
        <head>Bibliography</head>
        <listBibl>
          <bibl xml:id="Cordel">
            <author>Constance Carta, Elina Leblanc</author>
            <title level="a">Le projet ” Démêler le cordel ” : une bibliothèque numérique pour
              l’étude de la littérature éphémère espagnole du XIXe siècle</title>
            <title level="m">Colloque Humanistica 2021</title>
            <date>2021</date>
            <pubPlace> Rennes, France</pubPlace>
            <ref target="https://humanistica2021.sciencesconf.org/340576/document">https://humanistica2021.sciencesconf.org/340576/document</ref>
          </bibl>
          <bibl xml:id="Kraken2019">
            <author>Benjamin Kiessling</author>
            <title level="a">Kraken - an Universal Text Recognizer for the Humanities</title>
            <title level="m">Digital Humanities 2019 Conference Abstracts</title>
            <date when="2019-07">July 2019</date>
            <pubPlace>Utrecht, The Netherlands</pubPlace>
            <ref target="https://dev.clariah.nl/files/dh2019/boa/0673.html">https://dev.clariah.nl/files/dh2019/boa/0673.html</ref>
          </bibl>
          <bibl xml:id="segmonto2021">
            <author>Simon Gabay, Jean-Baptiste Camps, Ariane Pinche, Claire Jahan</author>
            <title level="a">SegmOnto: common vocabulary and practices for analysing the layout of
              manuscripts (and more)</title>
            <title level="m">1st International Workshop on Computational Paleography (IWCP@ICDAR
              2021)</title>
            <date when="2021-09">Sep. 2021</date>
            <pubPlace>Lausanne, Switzerland</pubPlace>
            <ref target="https://hal.archives-ouvertes.fr/hal-03336528">https://hal.archives-ouvertes.fr/hal-03336528</ref>
          </bibl>
          <bibl xml:id="eScriptorium2019">
            <author>Benjamin Kiessling, Robin Tissot, Daniel Stökl Ben Ezra, Peter Stokes</author>
            <title level="a">A Modular Region and Text Line Layout Analysis System</title>
            <title level="m">Proceedings of the 15th International Conference on Document Analysis
              and Recognition</title>
            <date when="2019-09">Sep. 2019</date>
            <pubPlace>Sydney, Australia</pubPlace>
            <ref target="https://ieeexplore.ieee.org/document/8893029">https://ieeexplore.ieee.org/document/8893029</ref>
          </bibl>
          <bibl xml:id="PAGE">
            <author>Stefan Pletschacher, Apostolos Antonacopoulos</author>
            <title level="a">The PAGE (Page Analysis and Ground-Truth Elements) Format
              Framework</title>
            <title level="m">Proceedings of the 20th International Conference on Pattern Recognition
              (ICPR2010)</title>
            <date when="2010-08">Aug. 2010</date>
            <pubPlace>Istanbul, Turkey</pubPlace>
            <ref target="https://ieeexplore.ieee.org/document/5597587">https://ieeexplore.ieee.org/document/5597587</ref>
          </bibl>
          <bibl xml:id="TEIguidelines">
            <editor>TEI Consortium</editor>
            <title level="m">TEI Guidelines for Electronic Text Encoding and Interchange</title>
            <ref target="https://tei-c.org/release/doc/tei-p5-doc/en/html/index.html">https://tei-c.org/release/doc/tei-p5-doc/en/html/index.html</ref>
          </bibl>
        </listBibl>
      </div>
      <div>
        <schemaSpec ident="oddPliego" prefix="tei_" start="TEI" targetLang="en" docLang="en">
          <moduleRef key="tei"/>
          <moduleRef key="header" include=" authority appInfo application availability biblFull category change classDecl correction creation edition editionStmt editorialDecl encodingDesc extent fileDesc idno keywords language langUsage licence listPrefixDef namespace normalization prefixDef profileDesc projectDesc publicationStmt punctuation rendition revisionDesc sourceDesc taxonomy teiHeader textClass titleStmt"/>
          <moduleRef key="core" include="add author choice corr date del desc expan foreign gap graphic head hi item l lb lg list name note orig p pb publisher pubPlace ref resp respStmt sic sp speaker stage term title unclear"/>
          <moduleRef key="textstructure" include="body closer div front TEI text trailer"/>
          <moduleRef key="namesdates" include="country settlement listPlace placeName geo location place"/>
          <moduleRef key="msdescription" include="acquisition additions altIdentifier collection condition decoDesc decoNote dim history layout layoutDesc locus locusGrp material msContents msDesc msIdentifier msItem objectDesc origin physDesc provenance repository summary support supportDesc"/>
          <moduleRef key="drama" include="castItem castList set"/>
          <moduleRef key="transcr" include="am ex facsimile fw sourceDoc subst supplied surface surfaceGrp"/>
          <moduleRef key="linking" except=""/>

          <elementSpec ident="div" mode="change">
            <attList>
              <attDef ident="type" mode="change" usage="opt">
                <valList mode="add" type="open">
                  <valItem ident="colofon"/>
                  <valItem ident="productos_a_la_venta"/>
                  <valItem ident="parte"/>
                  <valItem ident="reparto"/>
                </valList>
              </attDef>
            </attList>
          </elementSpec>
          
          <elementSpec ident="fw" mode="change">
            <attList>
              <attDef ident="type" mode="change" usage="opt">
                <valList mode="add" type="open">
                  <valItem ident="impresorNum"/>
                  <valItem ident="paginaNum"/>
                  <valItem ident="reclamo"/>
                  <valItem ident="signatura_tipografica"/>
                </valList>
              </attDef>
            </attList>
          </elementSpec>

          <elementSpec ident="head" mode="change">
            <attList>
              <attDef ident="type" mode="change" usage="opt">
                <valList mode="add" type="open">
                  <valItem ident="subtitulo"/>
                  <valItem ident="titulo_parte"/>
                  <valItem ident="subtitulo_parte"/>
                  <valItem ident="estribillo"/>
                  <valItem ident="titulo_cancion"/>
                  <valItem ident="reparto_titulo"/>
                  <valItem ident="titulo_trovo"/>
                  <valItem ident="titulo_estrofa"/>
                </valList>
              </attDef>
            </attList>
          </elementSpec>

          <elementSpec ident="hi" mode="change">
            <attList>
              <attDef ident="rend" mode="change" usage="opt">
                <valList mode="add" type="open">
                  <valItem ident="cursiva"/>
                  <valItem ident="negrita"/>
                </valList>
              </attDef>
            </attList>
          </elementSpec>
          
          <elementSpec ident="material" mode="change">
            <attList>
              <attDef ident="subtype" mode="change" usage="opt">
                <valList mode="add" type="open">
                  <valItem ident="verde"/>
                  <valItem ident="amarillo"/>
                  <valItem ident="azul"/>
                  <valItem ident="naranja"/>
                  <valItem ident="rosa"/>
                </valList>
              </attDef>
            </attList>
          </elementSpec>

          <!-- SegmOnto -->
          <elementSpec ident="TEI" mode="change">
            <constraintSpec ident="sourceDoc_check" scheme="schematron">
              <constraint>
                <sch:rule context="tei:TEI">
                  <sch:assert test="./tei:sourceDoc">Element "TEI" incomplete; missing required
                    element "sourceDoc".</sch:assert>
                </sch:rule>
              </constraint>
            </constraintSpec>
            <attList>
              <attDef ident="xml:id" mode="change" usage="req"/>
            </attList>
          </elementSpec>

          <elementSpec ident="teiHeader" mode="change">
            <constraintSpec ident="encodingDesc_check" scheme="schematron">
              <constraint>
                <sch:rule context="tei:teiHeader[parent::tei:TEI]">
                  <sch:assert test="./tei:encodingDesc">Element "teiHeader" incomplete; missing
                    required element "encodingDesc".</sch:assert>
                </sch:rule>
              </constraint>
            </constraintSpec>
            <constraintSpec ident="profileDesc_check" scheme="schematron">
              <constraint>
                <sch:rule context="tei:teiHeader[parent::tei:TEI]">
                  <sch:assert test="./tei:profileDesc">Element "teiHeader" incomplete; missing
                    required element "profileDesc".</sch:assert>
                </sch:rule>
              </constraint>
            </constraintSpec>
          </elementSpec>

          <elementSpec ident="authority" mode="change">
            <attList>
              <attDef ident="role" mode="add" usage="req">
                <valList type="closed">
                  <valItem ident="funder"/>
                  <valItem ident="sponsor"/>
                  <valItem ident="rightsHolder"/>
                </valList>
              </attDef>
            </attList>
          </elementSpec>

          <elementSpec ident="sourceDesc" mode="change">
            <constraintSpec ident="encodingDesc_check" scheme="schematron">
              <constraint>
                <sch:rule context="tei:sourceDesc[parent::tei:fileDesc]">
                  <sch:assert test="./tei:msDesc">Element "sourceDesc" incomplete; missing required
                    element "msDesc".</sch:assert>
                </sch:rule>
              </constraint>
            </constraintSpec>
          </elementSpec>

          <elementSpec ident="encodingDesc" mode="change">
            <constraintSpec ident="encodingDesc_check" scheme="schematron">
              <constraint>
                <sch:rule context="tei:encodingDesc[parent::tei:teiHeader]">
                  <sch:assert test="./tei:classDecl">Element "encodingDesc" incomplete; missing
                    required element "classDecl".</sch:assert>
                </sch:rule>
              </constraint>
            </constraintSpec>
          </elementSpec>

          <elementSpec ident="classDecl" mode="change">
            <constraintSpec ident="taxonomy_check" scheme="schematron">
              <constraint>
                <sch:rule context="tei:taxonomy[parent::tei:classDecl][1]">
                  <sch:assert test="@xml:id='SegmOnto'">Element "classDecl" incomplete; missing
                    required element "bibl" containing element "taxonomy" with attribute "@xml:id"
                    and value "SegmOnto".</sch:assert>
                </sch:rule>
                <sch:rule context="tei:bibl[parent::tei:taxonomy/@xml:id='SegmOnto']">
                  <sch:assert test="./tei:title/text()='SegmOnto'">Element "classDecl" incomplete;
                    missing required element "bibl" containing element "title" with content
                    "SegmOnto".</sch:assert>
                  <sch:assert test="./tei:ptr/@target='https://github.com/segmonto'">Element
                    "classDecl" incomplete; missing required element "bibl" containing element "ptr"
                    with attribute "@target" and value "https://github.com/segmonto".</sch:assert>
                </sch:rule>
              </constraint>
            </constraintSpec>
            <constraintSpec ident="appInfo_check" scheme="schematron">
              <constraint>
                <sch:rule context="tei:application[parent::tei:appInfo]">
                  <sch:assert test="./tei:label">Element "classDecl" incomplete; missing required
                    element "application" containing element "label".</sch:assert>
                  <sch:assert test="./tei:ptr/@target">Element "classDecl" incomplete; missing
                    required element "application" containing element "ptr" with attribute
                    "@target".</sch:assert>
                </sch:rule>
              </constraint>
            </constraintSpec>
          </elementSpec>

          <elementSpec ident="editorialDecl" mode="change">
            <content>
              <sequence preserveOrder="true">
                <elementRef key="correction"/>
                <elementRef key="hyphenation"/>
                <elementRef key="interpretation"/>
                <elementRef key="normalization"/>
                <elementRef key="punctuation"/>
                <elementRef key="segmentation"/>
                <elementRef key="quotation"/>
              </sequence>
            </content>
            <constraintSpec ident="corresp_check" scheme="schematron">
              <constraint>
                <sch:rule context="tei:editorialDecl[parent::tei:encodingDesc]">
                  <sch:assert test="@corresp='#automaticTranscription'">Element "editorialDecl"
                    incomplete; missing attribute "@corresp" and value
                    "#automaticTranscription".</sch:assert>
                </sch:rule>
              </constraint>
            </constraintSpec>
            <attList>
              <attDef ident="corresp" mode="change" usage="req"> </attDef>
            </attList>
          </elementSpec>

          <elementSpec ident="taxonomy" mode="change">
            <constraintSpec ident="category_check" scheme="schematron">
              <constraint>
                <sch:rule context="tei:category[parent::tei:taxonomy/@xml:id='SegmOnto'][1]">
                  <sch:assert test="@xml:id='SegmOntoZones'">Element "taxonomy" incomplete; missing
                    required element "category" with attribute "@xml:id" and value
                    "SegmOntoZones".</sch:assert>
                </sch:rule>
                <sch:rule context="tei:category[parent::tei:taxonomy/@xml:id='SegmOnto'][2]">
                  <sch:assert test="@xml:id='SegmOntoLines'">Element "taxonomy" incomplete; missing
                    required element "category" with attribute "@xml:id" and value
                    "SegmOntoLines".</sch:assert>
                </sch:rule>
              </constraint>
            </constraintSpec>
          </elementSpec>

          <elementSpec ident="application" mode="change">
            <attList>
              <attDef ident="id" mode="change">
                <valList type="semi">
                  <valItem ident="eScriptorium"/>
                  <valItem ident="Transkribus"/>
                </valList>
              </attDef>
            </attList>
          </elementSpec>

          <elementSpec ident="category" mode="change">
            <!-- control content of catDesc of SegmOnto -->
            <constraintSpec ident="catDesc_check" scheme="schematron">
              <constraint>
                <!-- CustomZone -->
                <sch:rule context="tei:catDesc[parent::tei:category/@xml:id='SegmOntoZones'][1]">
                  <sch:assert test="@xml:id='CustomZone'">Element "category" incomplete; missing
                    required element "catDesc" with attribute "@xml:id" and value
                    "CustomZone".</sch:assert>
                  <sch:assert test="./tei:title/text()='CustomZone'">Element "category" with
                    attribute "@xml:id" and value "CustomZone" incomplete ; missing required element
                    "title" with content "CustomZone".</sch:assert>
                  <sch:assert test="./tei:ptr/@target='https://github.com/SegmOnto/examples/blob/main/zones/CustomZone/CustomZone.md'">Element "category" with attribute "@xml:id" and value "CustomZone" incomplete;
                    missing required element "ptr" with attribute "@target" and value
                    "https://github.com/SegmOnto/examples/blob/main/zones/CustomZone/CustomZone.md".</sch:assert>
                </sch:rule>
                <!-- DamageZone -->
                <sch:rule context="tei:catDesc[parent::tei:category/@xml:id='SegmOntoZones'][2]">
                  <sch:assert test="@xml:id='DamageZone'">Element "category" incomplete; missing
                    required element "catDesc" with attribute "@xml:id" and value
                    "DamageZone".</sch:assert>
                  <sch:assert test="./tei:title/text()='DamageZone'">Element "category" with
                    attribute "@xml:id" and value "DamageZone" incomplete ; missing required element
                    "title" with content "DamageZone".</sch:assert>
                  <sch:assert test="./tei:ptr/@target='https://github.com/SegmOnto/examples/blob/main/zones/DamageZone/DamageZone.md'">Element "category" with attribute "@xml:id" and value "DamageZone" incomplete;
                    missing required element "ptr" with attribute "@target" and value
                    "https://github.com/SegmOnto/examples/blob/main/zones/DamageZone/DamageZone.md".</sch:assert>
                </sch:rule>
                <!-- DigitizationArtefactZone -->
                <sch:rule context="tei:catDesc[parent::tei:category/@xml:id='SegmOntoZones'][3]">
                  <sch:assert test="@xml:id='DigitizationArtefactZone'">Element "category"
                    incomplete; missing required element "catDesc" with attribute "@xml:id" and
                    value "DropCapitalZone".</sch:assert>
                  <sch:assert test="./tei:title/text()='DigitizationArtefactZone'">Element
                    "category" with attribute "@xml:id" and value "DigitizationArtefactZone"
                    incomplete ; missing required element "title" with content
                    "DigitizationArtefactZone".</sch:assert>
                  <sch:assert test="./tei:ptr/@target='https://github.com/SegmOnto/examples/blob/main/zones/DigitizationArtefactZone/DigitizationArtefactZone.md'">Element "category" with attribute "@xml:id" and value
                    "DigitizationArtefactZone" incomplete; missing required element "ptr" with
                    attribute "@target" and value
                    "https://github.com/SegmOnto/examples/blob/main/zones/DigitizationArtefactZone/DigitizationArtefactZone.md".</sch:assert>
                </sch:rule>
                <!-- DropCapitalZone -->
                <sch:rule context="tei:catDesc[parent::tei:category/@xml:id='SegmOntoZones'][4]">
                  <sch:assert test="@xml:id='DropCapitalZone'">Element "category" incomplete;
                    missing required element "catDesc" with attribute "@xml:id" and value
                    "DropCapitalZone".</sch:assert>
                  <sch:assert test="./tei:title/text()='DropCapitalZone'">Element "category" with
                    attribute "@xml:id" and value "DropCapitalZone" incomplete ; missing required
                    element "title" with content "DropCapitalZone".</sch:assert>
                  <sch:assert test="./tei:ptr/@target='https://github.com/SegmOnto/examples/blob/main/zones/DropCapitalZone/DropCapitalZone.md'">Element "category" with attribute "@xml:id" and value "DropCapitalZone"
                    incomplete; missing required element "ptr" with attribute "@target" and value
                    "https://github.com/SegmOnto/examples/blob/main/zones/DropCapitalZone/DropCapitalZone.md".</sch:assert>
                </sch:rule>
                <!-- GraphicZone -->
                <sch:rule context="tei:catDesc[parent::tei:category/@xml:id='SegmOntoZones'][5]">
                  <sch:assert test="@xml:id='GraphicZone'">Element "category" incomplete; missing
                    required element "catDesc" with attribute "@xml:id" and value
                    "GraphicZone".</sch:assert>
                  <sch:assert test="./tei:title/text()='GraphicZone'">Element "category" with
                    attribute "@xml:id" and value "GraphicZone" incomplete ; missing required
                    element "title" with content "GraphicZone".</sch:assert>
                  <sch:assert test="./tei:ptr/@target='https://github.com/SegmOnto/examples/blob/main/zones/GraphicZone/GraphicZone.md'">Element "category" with attribute "@xml:id" and value "GraphicZone" incomplete;
                    missing required element "ptr" with attribute "@target" and value
                    "https://github.com/SegmOnto/examples/blob/main/zones/GraphicZone/GraphicZone.md".</sch:assert>
                </sch:rule>
                <!-- DefaultLine -->
                <sch:rule context="tei:catDesc[parent::tei:category/@xml:id='SegmOntoLines'][1]">
                  <sch:assert test="@xml:id='DefaultLine'">Element "category" incomplete; missing
                    required element "catDesc" with attribute "@xml:id" and value
                    "Default".</sch:assert>
                  <sch:assert test="./tei:title/text()='DefaultLine'">Element "category" with
                    attribute "@xml:id" and value "DefaultLine" incomplete; missing required element
                    "title" with content "DefaultLine".</sch:assert>
                  <sch:assert test="./tei:ptr/@target='https://github.com/SegmOnto/examples/blob/main/lines/DefaultLine/DefaultLine.md'">Element "category" with attribute "@xml:id" and value "DefaultLine" incomplete;
                    missing required element "ptr" with attribute "@target" and value
                    "https://github.com/SegmOnto/examples/blob/main/lines/Default/Default.md".</sch:assert>
                </sch:rule>
              </constraint>
            </constraintSpec>
          </elementSpec>

          <!-- À supprimer si pas utilisé-->
          <elementSpec ident="sourceDoc" mode="change">
            <constraintSpec ident="id_check" scheme="schematron">
              <constraint>
                <sch:rule context="tei:sourceDoc">
                  <sch:assert test="@xml:id='automaticTranscription'">Element "sourceDoc"
                    incomplete; missing attribute "@xml:id" and value
                    "automaticTranscription".</sch:assert>
                </sch:rule>
              </constraint>
            </constraintSpec>
            <attList>
              <attDef ident="xml:id" mode="change" usage="req"> </attDef>
            </attList>
          </elementSpec>

          <elementSpec ident="surface" mode="change">
            <constraintSpec ident="line_path_check" scheme="schematron">
              <constraint>
                <sch:rule context="tei:surface[parent::tei:sourceDoc]">
                  <sch:assert test="./tei:graphic">Element "surface" incomplete; missing element
                    'graphic'.</sch:assert>
                </sch:rule>
              </constraint>
            </constraintSpec>
            <attList>
              <attDef ident="xml:id" mode="change" usage="req"/>
              <attDef ident="type" mode="change" usage="req"/>
              <attDef ident="cert" mode="change" usage="rec">
                <valList type="closed" mode="change">
                  <valItem ident="gold">
                    <desc>Gold standard, corrected by a researcher</desc>
                  </valItem>
                  <valItem ident="silver">
                    <desc>Silver standard, produced automatically</desc>
                  </valItem>
                  <valItem ident="other">
                    <desc>Other standard</desc>
                  </valItem>
                </valList>
              </attDef>
            </attList>
          </elementSpec>

          <elementSpec ident="zone" mode="change">
            <constraintSpec ident="line_path_check" scheme="schematron">
              <constraint>
                <sch:rule context="tei:zone[parent::tei:zone]">
                  <sch:assert test="./tei:path and ./tei:line">Element "zone" incomplete; missing
                    element 'path' and 'line'.</sch:assert>
                </sch:rule>
              </constraint>
            </constraintSpec>
            <attList>
              <attDef ident="xml:id" mode="change" usage="req"/>
              <attDef ident="corresp" mode="change" usage="req"/>
              <attDef ident="ana" mode="change" usage="req"/>
              <attDef ident="points" mode="change" usage="req"/>
              <attDef ident="source" mode="change" usage="req"/>
            </attList>
          </elementSpec>

          <elementSpec ident="path" mode="delete"/>
        </schemaSpec>

      </div>
    </body>
  </text>
</TEI>